<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <!-- Especificación de colores -->
    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="grey">
        <color rgba="0 0 0 1"/>
    </material>

    <!-- Especificaciones de gazebo -->
    <gazebo reference="chasis">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="master">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="lidar_link">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="right_wheel">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="left_wheel">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="right_wheel_front">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="left_wheel_front">
        <material>Gazebo/White</material>
    </gazebo>

    <gazebo reference="camera_link">
        <sensor name="depth_camera" type="depth">
            <visualize>true</visualize>
            <update_rate>30.0</update_rate>
            <camera name="camera">
                <horizontal_fov>1.047198</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>3</far>
                </clip>
            </camera>
            <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
                <baseline>0.2</baseline>
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <frameName>camera_depth_frame</frameName>
                <pointCloudCutoff>0.5</pointCloudCutoff>
                <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
                <distortionK1>0</distortionK1>
                <distortionK2>0</distortionK2>
                <distortionK3>0</distortionK3>
                <distortionT1>0</distortionT1>
                <distortionT2>0</distortionT2>
                <CxPrime>0</CxPrime>
                <Cx>0</Cx>
                <Cy>0</Cy>
                <focalLength>0</focalLength>
                <hackBaseline>0</hackBaseline>
            </plugin>
        </sensor>
    </gazebo>
    
    <gazebo reference="lidar_link">
        <sensor name="lidar" type="ray">
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>120</samples>
                        <resolution>1.000000</resolution>
                        <min_angle>-3.14159</min_angle>
                        <max_angle>3.14159</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>15.0</max>
                    <resolution>0.015</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <remapping>~/out:=scan</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>lidar_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <!-- Macro para calcular la inercia de un chasis rectangular -->
    <xacro:macro name="inertial_box" params="mass x y z *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (y*y+z*z)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * mass * (x*x+z*z)}" iyz="0.0"
                    izz="${(1/12) * mass * (x*x+y*y)}" />
        </inertial>
    </xacro:macro>

    <!-- Macro para calcular la inercia de una rueda cilíndrica -->
    <xacro:macro name="inertial_cylinder" params="mass length radius *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${mass*(3*radius*radius + length*length)/12}" ixy="0.0" ixz="0.0"
                    iyy="${mass*(3*radius*radius + length*length)/12}" iyz="0.0"
                    izz="${mass*(radius*radius)/2}" />
        </inertial>
    </xacro:macro>
    

</robot>
